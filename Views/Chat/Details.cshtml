@model MyWebsite.Models.Chat_Room

@{
    ViewBag.Title = "Details";
}
<div class="container-fluid">
    <div class="row">
        <div class="col-3 no-padding-left-right">
            @{Html.RenderAction("Menu", "Admin");}
        </div>
        <div class="col-9">

            <div id="chatroom-discusion" class="chat-discusion-full">
                @foreach (var item in Model.Messages)
                {
                    if (item.User.User.Email != User.Identity.Name)
                    {
                        <div class="chat-room-message">
                            @if (@item.User.User.Photo != null)
                            {
                                <img src="~/Images/User/@item.User.User.Photo" alt="@item.User.User.ForName @item.User.User.SurName">
                            }
                            else
                            {
                                <img src="~/Images/Admin/User.jpg" alt="@item.User.User.ForName @item.User.User.SurName">

                            }
                            <div style="margin-bottom:10px">@Html.Raw(item.Text)</div>
                            <p class="time-right">@item.Date</p>
                        </div>
                    }
                    else
                    {
                        <div class="chat-room-message chat-room-message-dark">
                            @if (@item.User.User.Photo != null)
                            {
                                <img src="~/Images/User/@item.User.User.Photo" alt="@item.User.User.ForName @item.User.User.SurName" class="right">
                            }
                            else
                            {
                                <img src="~/Images/Admin/User.jpg" alt="@item.User.User.ForName @item.User.User.SurName" class="right">

                            }
                            <div style="margin-bottom:10px">@Html.Raw(item.Text)</div>
                            <p class="time-left">@item.Date</p>
                        </div>
                    }
                }
            </div>

            <br>
            <div class="row">
                <input type="hidden" name="idr" value="@Model.ID" />


                <div class="col-md-12 col-xs-12 form-group">
                    <textarea id="input_text" name="Text" class="form-control" style="height: 150px;width:100%"></textarea>
                </div>
            </div>
            <div style="margin-bottom:10px">
                <input type="file" name="File" id="btnFile" class="input-file hidden">
                <label tabindex="0" for="btnFile" class="btn btn-default"><i class="glyphicon glyphicon-paperclip"></i></label>
                <img id="loading-gif" src="~/Images/loader.gif" style="height:90px; display:none" />
                <sapn>Makymalny rozmiar pliku to 4MB</sapn>
            </div>
                


            <button id="chatroom-send" type="submit" class="btn btn-primary" style="width:100%">Wyślij</button>
        </div>
    </div>
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        window.onload = function () {
            $("#input_text").emojioneArea();
            $('#chatroom-discusion').scrollTop($('#chatroom-discusion').prop("scrollHeight"));
        }
        $(function () {

            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            $.connection.hub.start(function () {
                chat.server.join(@Model.ID.ToString());
            });

            // Create a function that the hub can call back to display messages.
            chat.client.addChatMessage = function (email,name, photo, message) {
                // Add the message to the page.
                var ph = "";
                if (photo != null) {
                    ph = "/Images/User/" + photo;
                } else {
                    ph = "/Admin/User.jpg";
                }
                if (email == '@User.Identity.Name'){
                    $('#chatroom-discusion').append('<div class="chat-room-message chat-room-message-dark"><img src="' + ph + '" alt="' + name + '" class="right"><p>' + message + '<p><span class="time-left">' + new Date().getHours() + ":" + new Date().getMinutes() + '</span></div >');
                } else {
                    var audio = new Audio('/Sounds/Chat/message.mp3');
                    audio.play();
                    $('#chatroom-discusion').append('<div class="chat-room-message"><img src="' + ph + '" alt="' + name + '" class="right"><p>' + message + '<p><span class="time-left">' + new Date().getHours() + ":" + new Date().getMinutes() + '</span></div >');
                }
                $('#chatroom-discusion').scrollTop($('#chatroom-discusion').prop("scrollHeight"));
            };
            // Set initial focus to message input box.
            $('#input_text').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#chatroom-send').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send(@Model.ID,'@User.Identity.Name', $('#input_text').val());
                    // Clear text box and reset focus for next comment.
                    $('#input_text').val('').focus();
                });
                $('#btnFile').change(function (e) {
                    // Call the Send method on the hub.
                    $('#btnFile').hide();
                    $('#loading-gif').show();
                    var file_data = this.files[0];
                    //var file_data = $('#btnFile').prop('files')[0];
                    var form_data = new FormData();
                    form_data.append('File', file_data);
                     jQuery.ajax({
                            type: "Post",
                            url: "@Url.Action("AddFile", "Chat", null, Request.Url.Scheme, null)",
                            data: form_data,
                            async: false,
                            dataType: "json",
                            contentType:false,
                            processData: false,
                            success: function (data) {
                                toastr.options = {
                                    "closeButton": true,
                                    "debug": false,
                                    "newestOnTop": true,
                                    "positionClass": "toast-bottom-right",
                                    "preventDuplicates": true,
                                    "showDuration": "300",
                                    "hideDuration": "1000",
                                    "timeOut": "5000",
                                    "extendedTimeOut": "1000",
                                    "showEasing": "swing",
                                    "hideEasing": "linear",
                                    "showMethod": "fadeIn",
                                    "hideMethod": "fadeOut"
                                }
                                if (data != "Error") {
                                    $('#loading-gif').hide();
                                    $('#btnFile').show();
                                    chat.server.send(@Model.ID,'@User.Identity.Name', data);
                                    // Clear text box and reset focus for next comment.
                                    $('#input_text').focus();
                                } else {
                                    toastr.error("", "Błąd");
                                    $('#btnFile').css("display", "show");
                                }
                            }
                        });


                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
        window.onbeforeunload = function () {
            $.connection.hub.start(function () {
                chat.server.leave(@Model.ID.ToString());
            });
        };

    </script>
}