@model MyWebsite.Models.Product

@{
    ViewBag.Title = "Dodaj";
}
<div class="container-fluid">
    <div class="row">
        <div class="col-3 no-padding-left-right">
            @{Html.RenderAction("Menu", "Admin");}
        </div>
        <div class="col-9">
            <h2>Dodaj</h2>

            @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Produkt</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(m => m.Thumb, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            <div class="fileUpload">
                                <input class="form-control" id="uploadFile" disabled="disabled" placeholder="Wskaż plik" type="text">
                                <div class="fileUploadBtn btn btn-primary">
                                    <span>Prześlij</span>
                                    <input class="upload" name="Thumbs" id="uploadBtn" type="file" accept="image/*" onchange="loadFile(event)">
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.Thumb, "", new { @class = "text-danger" })
                            <img id="thumbs-preview" style="width:auto;height:150px; overflow:hidden;border-radius:4px;margin-top:10px" />

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Prine, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Prine, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Prine, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CatId", ViewBag.categorieslist as IEnumerable<SelectListItem>, "Wybierz kategorie", new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Demo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Demo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Demo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Photos, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            <div class="fileUpload">
                                <input class="form-control" id="uploadGallery" disabled="disabled" placeholder="Dodaj zdjęcie" type="text">
                                <div class="fileUploadBtn btn btn-primary">
                                    <span>Prześlij</span>
                                    @{ int c = ((ViewBag.stringofphoto).ToString().Split('|').Length) - 1;}
                                    <span id="photo-gallery-count" data-counts="@c"></span>
                                    <div id="images">

                                        <input id="upImage" class="photo-gallery upload" type="file" accept="image/*" onchange="Upload(event)">
                                        <input id="stringofphoto" name="stringofphoto" type="hidden" value="@ViewBag.stringofphoto">


                                    </div>
                                </div>
                            </div>
                            <div class="row" id="gallery">
                                @if (ViewBag.stringofphoto != "")
                                {
                                    var sc = 1;
                                    foreach (var s in (ViewBag.stringofphoto).ToString().Split('|'))
                                    {
                                        if (s != "")
                                        {
                                            var name = s.Replace(".", "");
                                            <div class="article-gallery-preview col-12 col-md-3 col-lg-4" id="article-gallery-preview-@name" onclick="Removes('@s')">
                                                <img src="/Images/Product/Gallery/@s" class="img-fluid" style="border-radius: 15px; border: 9px solid white;" />
                                            </div>
                                            sc = sc + 1;
                                        }
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Dodaj" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Wróć do listy", "Index")
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/Scripts/Sites/Products/Create.js")
