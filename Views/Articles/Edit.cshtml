@model MyWebsite.Models.Article

@{
    ViewBag.Title = "Edytuj Artykuł";
}
<div class="container">
    <div class="row">
            @{Html.RenderAction("Menu", "Admin");}
        <div class="col-12 pl-50px">
            <h2>Edytuj</h2>

            @using (Html.BeginForm("Edit", "Articles", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Artykuł</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(m => m.Thumb, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            <div class="fileUpload">
                                <input class="form-control" id="uploadFile" disabled="disabled" placeholder="Wskaż plik" type="text">
                                <div class="fileUploadBtn btn btn-primary">
                                    <span>Prześlij</span>
                                    <input class="upload" name="Thumbs" id="uploadBtn" type="file" accept="image/*" onchange="loadFile(event)">
                                </div>
                            </div>
                            <img src="~/Images/Article/@Model.Thumb" id="thumbs-preview" style="width:auto;height:150px; overflow:hidden;border-radius:4px;margin-top:10px" />

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Text, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Tags, new { @class = "form-control" })
                            <p><b>Oddzielane spacją</b></p>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CategoryId", ViewBag.categories as IEnumerable<SelectListItem>, "Wybierz kategorie", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CommentAloved, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <label class="form-check">
                                @Html.CheckBoxFor(model => model.CommentAloved)
                                <span class="checkmark"></span>
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ShowUser, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <label class="form-check">
                                @Html.CheckBoxFor(model => model.ShowUser)
                                <span class="checkmark"></span>
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PublishDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="input-group date" id="datetimepicker1" data-target-input="nearest">
                                @Html.EditorFor(model => model.PublishDate, new { htmlAttributes = new { @class = "form-control datetimepicker-input" }, data_target = "#datetimepicker1", @Value = "5" })
                                <div class="input-group-append" data-target="#datetimepicker1" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.PublishDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Photos, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">

                            <div class="fileUpload">
                                <input class="form-control" id="uploadGallery" disabled="disabled" placeholder="Dodaj zdjęcie" type="text">
                                <div class="fileUploadBtn btn btn-primary">
                                    <span>Prześlij</span>
                                    @{ int c = ((ViewBag.stringofphoto).ToString().Split('|').Length) - 1;}
                                    <span id="photo-gallery-count" data-counts="@c"></span>
                                    <div id="images">

                                        <input id="upImage" class="photo-gallery upload" type="file" accept="image/*" onchange="Upload(event)">
                                        <input id="stringofphoto" name="stringofphoto" type="hidden" value="@ViewBag.stringofphoto">


                                    </div>
                                </div>
                            </div>
                            <div id="gallery" class="row">
                                @foreach (var p in Model.Photos)
                                {
                                    <div id="article-gallery-previewU-@p.Id" onclick="removeUP(@Model.Id,@p.Id)" class="article-gallery-preview col-12 col-md-3 col-lg-4">
                                        <img src="/Images/Article/Gallery/@p.Path" class="img-fluid" style="border-radius: 15px; border: 9px solid white;" />
                                    </div>
                                }
                                @if (ViewBag.stringofphoto != "")
                                {
                                    var sc = 1;
                                    foreach (var s in (ViewBag.stringofphoto).ToString().Split('|'))
                                    {
                                        if (s != "")
                                        {
                                            var name = s.Replace(".", "");
                                            <div class="article-gallery-preview col-12 col-md-3 col-lg-4" id="article-gallery-preview-@name" onclick="Removes('@s')">
                                                <img src="/Images/Article/Gallery/@s" class="img-fluid" style="border-radius: 15px; border: 9px solid white;" />
                                            </div>
                                            sc = sc + 1;
                                        }
                                    }
                                }
                            </div>

                          
                            @Scripts.Render("~/Scripts/Sites/Articles/Edit.js")

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-12 text-center">
                            <input type="submit" value="Zapisz" class="btn btn-default btn-outline-success" />
                            <a href="@Url.Action("Index", "Articles")" class="btn btn-default btn-outline-danger">Anuluj</a>
                        </div>
                    </div>
                </div>
            }

            <div>
            </div>
        </div>
    </div>
</div>
