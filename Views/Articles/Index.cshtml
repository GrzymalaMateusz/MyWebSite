@model PagedList.IPagedList<MyWebsite.Models.Article>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Artykuły";
}
<div class="container">
    <div class="row">
            @{Html.RenderAction("Menu", "Admin");}
        
        <div class="col-12 pl-50px">
            <h2 class="float-left">Artykuły</h2>

            <div class="float-right">
                <a href="@Url.Action("Index","ArticleCategories")" class="btn btn-default list-btn-rounded float-right" style="margin-right:0px"><i class="fa fa-list" aria-hidden="true"></i></a>
                <a href="@Url.Action("Create","Articles")" class="btn btn-default list-btn-rounded float-right"><i class="fa fa-plus" aria-hidden="true"></i></a>
                @using (Html.BeginForm("Index", "Articles", FormMethod.Get, new { id = "list-search", @class = "float-right list-search-form", style = "margin-right:6px" }))
                {
                    <a id="list-search-submit" class="pull-right" onclick="show_input_search()"><i class="fa fa-search list-search-btn" aria-hidden="true"></i></a>
                    if (ViewBag.CurrentFilter != null)
                    {
                        <input id="list-input-search" class="list-search" name="searchString" type="text" style="width:175px" placeholder="Wpisz frazę" value="@ViewBag.CurrentFilter" />
                    }
                    else
                    {
                        <input id="list-input-search" class="list-search" name="searchString" type="text" style="width:35px" placeholder="Wpisz frazę" />
                    }

                }

            </div>
            <table class="table">
                <tr>
                    <th>
                        @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().PublishDate).ToString(), "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().Title).ToString(), "Index", new { sortOrder = ViewBag.TitleSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th class="d-none d-md-table-cell d-xl-table-cell">
                        @Html.DisplayNameFor(model => model.FirstOrDefault().User).ToString()
                    </th>
                    <th class="d-none d-md-table-cell d-xl-table-cell">
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Views).ToString()
                    </th>
                    <th></th>
                </tr>
                @foreach (var item in Model)
                {
                    <tr id="article-@item.Id">
                        <td>
                            @Html.DisplayFor(modelItem => item.PublishDate)
                        </td>
                        <td>
                            @Html.ActionLink(item.Title, "Details", new { id = item.Id })
                        </td>
                        <td class="d-none d-md-table-cell d-xl-table-cell">
                            @if (item.User.ForName != null || item.User.SurName != null)
                            {
                                @item.User.ForName @item.User.SurName
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.User.Email)
                            }
                        </td>
                        <td class="d-none d-md-table-cell d-xl-table-cell">
                            @Html.DisplayFor(modelItem => item.Views)
                        </td>
                        <td class="list-btn">
                            <a href="@Url.Action("Edit", new { id = item.Id })" title="Edytuj"><i class="fa fa-pencil list-edit-btn" aria-hidden="true"></i></a>
                            <a data-toggle="modal" data-target="#myModal1" title="Usuń" onclick="delete_article(@item.Id)"><i class="fa fa-trash list-delete-btn" aria-hidden="true"></i></a>
                        </td>
                    </tr>
                }

            </table>
            @if (Model.Count() != 0)
            {
                <center>
                    <p>Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) z @Model.PageCount</p>

                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                </center>
            }
            else
            {
                <div class="alert alert-info">
                    <strong>Informacja!</strong> Brak Artykułów do wyświetlenia.
                </div>
            }
        </div>
    </div>
</div>
<div id="myModal1" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Artykuł</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <p>Czy na pewno chcesz usunąć ten artykuł?</p>
            </div>
            <div class="modal-footer">
                <button id="modal-pagecontact-delete-confirmed" type="button" class="btn btn-default btn-success pull-left" data-dismiss="modal">Tak</button>
                <button type="button" class="btn btn-default btn-danger pull-left" data-dismiss="modal">Nie</button>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/Scripts/Sites/Articles/Index.js")


