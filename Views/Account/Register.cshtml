@model MyWebsite.Models.RegisterViewModel
@{
    ViewBag.Title = "Zarejestruj";
}
<div class="container">

    <h2>@ViewBag.Title.</h2>

    @using (Html.BeginForm("Register", "Account", FormMethod.Post,new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <h4>Utwórz nowe konto.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                <p style="padding-top:50px"><b>Dodatkowe dane:</b></p>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ForName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ForName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ForName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.SurName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Phone, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Photo, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <div class="fileUpload" >
                    <input class="form-control" id="uploadFile" disabled="disabled" placeholder="Wskaż plik" type="text">
                    <div class="fileUploadBtn btn btn-primary">
                        <span>Prześlij</span>
                        <input class="upload" name="avatar" id="uploadBtn" type="file" accept="image/*" onchange="loadFile(event)">
                    </div>
                </div>
                <img id="avatar-preview" style="width:auto;height:150px; overflow:hidden;border-radius:4px;margin-top:10px" />
                <script>
                    var loadFile = function (event) {
                        var output = document.getElementById('avatar-preview');
                        output.src = URL.createObjectURL(event.target.files[0]);
                        var trigger = document.getElementById('uploadFile');
                        trigger.value = event.target.files[0].name;
                    };

                </script>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Zarejestruj" />
            </div>
        </div>
    }
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }